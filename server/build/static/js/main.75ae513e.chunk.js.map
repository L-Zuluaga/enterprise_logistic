{"version":3,"sources":["services/userSession.js","services/componentServices/products.js","services/componentServices/routes.js","services/componentServices/conveyors.js","services/componentServices/orders.js","services/componentServices/distributors.js","services/componentServices/providers.js","services/componentServices/inventory.js","services/componentServices/ordersByProduct.js","components/login/login.js","components/crud/styles.js","components/crud/children/crudActionButton.js","components/dialog/styles.js","components/dialog/dialogAction.js","components/crud/children/crudTable.js","components/crud/children/crudButton.js","components/dialog/dialog.js","components/crud/crud.js","components/routesCrud/routesCrud.js","components/routesConveyors/routesConveyors.js","components/routesProducts/routesProducts.js","components/orders/routesOrders.js","components/routesDitributors/routesDistributors.js","components/routesProviders/routesProviders.js","components/routesInventory/routesInventory.js","components/ordersByProductRoute/routesOrdersByProduct.js","components/signup/distributor.js","components/signup/signupTypeSelector.js","components/signup/provider.js","components/signup/conveyor.js","components/assignRoutes/assignRoutes.js","components/routes/routes.js","components/navigation/styles.js","components/navigation/navSelector.js","components/navigation/navigation.js","components/themes/styles.js","components/themes/mainTheme.js","App.js","serviceWorker.js","index.js"],"names":["initialUserState","userLocalStorage","JSON","parse","localStorage","getItem","roleUser","idUser","isLogged","setItem","stringify","store","createStore","userState","action","type","undefined","removeItem","url","getProducts","a","fetch","response","json","responseData","createProduct","target","product","name","value","provider","buyPrice","weigh","weighUnit","method","body","headers","catch","error","console","then","deleteProduct","item","window","confirm","_id","res","text","log","onCancel","updateProduct","getRoutes","createRoute","route","zone","label","deleteRoute","updateRoute","getConveyors","getConveyorsByZone","zoneId","map","neighborhoodResponse","neighborhoods","requiredNeighborhoods","neighborhood","push","conveyorResponse","conveyors","resultConveyors","filter","conveyor","includes","createConveyor","user","deleteConveyor","updateConveyor","getOrders","getOrdersByRoute","orderResponse","orders","resultOrders","order","assignRoutes","assignedRoutes","deleteOrder","updateOrder","distributor","state","getDistributors","createDistributor","address","deleteDistributor","updateDistributor","getProviders","createProvider","nit","inCharge","deleteProvider","updateProvider","getInventory","addRegistry","newProduct","quantity","sellPrice","deleteRegistry","updateRegistry","updatedRegistry","getOrdersByProduct","Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","primary","main","form","width","submit","connect","userInfo","dispatch","setRoleUser","resetUserState","classes","userAdmin","userProvider","useState","email","password","data","setData","onChange","e","Container","component","maxWidth","CssBaseline","className","Avatar","onSubmit","event","preventDefault","alert","noValidate","TextField","required","fullWidth","id","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","Grid","container","xs","Box","mt","styles","titles","fontWeight","addButton","float","actionTitle","textTransform","actionButton","tableCell","CrudActionButton","size","operation","deleteAction","updateAction","props","location","useLocation","Fab","style","onClick","pathname","fieldInput","dialogIcon","FormActionDialog","title","description","fields","disabledFields","React","open","setOpen","handleClose","Dialog","onClose","aria-labelledby","fontSize","DialogTitle","DialogContent","DialogContentText","Object","entries","field","defaultDisabled","defaultValue","disabled","DialogActions","CrudTable","editActionTitle","editActionDescription","keys","TableContainer","Paper","Table","stickyHeader","aria-label","TableHead","TableRow","column","TableCell","TableBody","index","key","rowIndex","CrudButton","position","FormDialog","buttonLabel","dialogButtonLabel","buttonPosition","formData","Crud","dialogBtnLabel","dialogDescription","dialogActionTitle","dialogActionDescription","createAction","gutterBottom","RoutesCrud","useEffect","RoutesTransporters","RoutesProducts","RoutesOrders","InventoryCrud","secondary","DistributorSignUp","sm","justify","SignupTypeSelector","ProviderSignUp","ConveyorSignUp","AssignRoutes","root","flexGrow","oveflow","formControl","minWidth","selectEmpty","titlesGrid","saveButton","setConveyors","setConveyor","setOrders","assignedOrders","setAssignedOrders","routes","setRoutes","setRoute","handleCheckbox","orderId","update","concat","handleConveyorChange","handleRouteChange","responseConveyors","responseOrders","responseRoutes","FormControl","InputLabel","Select","labelId","MenuItem","assignConveyor","inputProps","paddingTop","createdAt","path","exact","RoutesInventory","RoutesConveyors","RoutesDistributors","RoutesProviders","RoutesOdersByProduct","Login","to","navBar","marginBottom","navButton","marginLeft","roleIcon","handleLogout","AppBar","Toolbar","mainContainer","paddingLeft","paddingRight","MainTheme","App","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.75ae513e.chunk.js","sourcesContent":["import { createStore } from 'redux'\n\n/**\n * Nombres constantes de acciones\n */\nconst SET_ROLUSER = 'SET_ROLUSER';\nconst GET_ROLEUSER = 'GET_ROLEUSER';\nconst RESET_USER_STATE = 'RESET_USER_STATE';\n\n/**\n * Estado global del usuario, utilizando react-redux\n */\nconst userLocalStorage = JSON.parse(localStorage.getItem('userState'));\nlet initialUserState;\n\n/* Se verifica si ya existe una sesion para este usuario en el almacenamiento local */\nif (userLocalStorage !== null) {\n  initialUserState = userLocalStorage;\n} else {\n  initialUserState = {\n    roleUser: '',\n    idUser: '',\n    isLogged: false\n  }\n  localStorage.setItem('userState',  JSON.stringify(initialUserState));\n};\n\n/**\n * Redux del usuario\n * @param userState Estado actual del usuario\n * @param  action Accion a ejecutar en el estado\n */\nfunction userInformation(userState = initialUserState, action) {\n\n  switch (action.type) {\n    case SET_ROLUSER:\n        userState = {\n          ...userState,\n            roleUser: action.roleUser\n        }\n        localStorage.setItem('userState', JSON.stringify(userState));\n      return userState;\n\n    case RESET_USER_STATE:\n        userState = undefined;\n        userState = initialUserState;\n        localStorage.removeItem('userState');\n      return userState;\n\n    case GET_ROLEUSER:\n        return userState.roleUser;\n\n    default:\n      return userState\n  }\n}\n\n\n/**\n * Metodo utilizado para modficar el rol del usuario logueado\n * @param roleUser\n */\nexport const setRoleUser = (roleUser) => {\n  return {\n    type: SET_ROLUSER,\n    roleUser: roleUser\n  }\n}\n\n/**\n * metodo utilizado para rstaurar los valores por defecto del estado del usuario\n */\nexport const resetUserState = () => {\n  return {\n    type: RESET_USER_STATE\n  }\n}\n\n/**\n * Metodo usado para saber el rol del usuario logueado en el sistema\n */\nexport const getRoleUser= () => {\n  return {\n    type: GET_ROLEUSER\n  }\n}\n\n/**\n * Inicializacion del store\n */\nconst store = createStore(userInformation);\n\nexport default store\n","let url = 'http://localhost:4000/products/'\n\nconst getProducts = async () => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst getProduct = async (id) => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst createProduct = async (target) => {\n  const product = {\n    name: target[1].value,\n    provider: target[2].value,\n    buyPrice: target[3].value,\n    weigh: target[4].value,\n    weighUnit: target[5].value\n  }\n\n   fetch(url, {\n      // Adding method type\n      method: \"POST\",\n      // Adding body or contents to send\n      body: JSON.stringify(product),\n      // Adding headers to the request\n      headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n  })\n  .catch(error => console.error('Error:', error))\n  .then(response => response.json())\n}\n\nconst deleteProduct = async (item) => {\n  if (window.confirm('¿Esta seguro que desea eliminar este producto?')) {\n    fetch(url + item._id, {\n      method: 'DELETE',\n      body: JSON.stringify(item),\n      headers: {\n         \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n   })\n   .catch(error => console.error('Error:', error))\n   .then(res => res.text()) // or res.json()\n   .then(res => console.log(\"Product deleted..\", res))\n  } else {\n    this.onCancel(item)\n  }\n}\n\nconst updateProduct = (target) => {\n  const product = {\n    _id: target[0].value,\n    name: target[1].value,\n    provider: target[2].value,\n    buyPrice: target[3].value,\n    weigh: target[4].value,\n    weighUnit: target[5].value,\n  }\n  fetch(url+product._id, {\n     method: \"PUT\",\n     body: JSON.stringify(product),\n     headers: {\n       \"Content-type\": \"application/json; charset=UTF-8\"\n     }\n   })\n .catch(error => console.error('Error:', error))\n .then(response => response.json())\n}\n\nexport {\n  getProducts,\n  getProduct,\n  createProduct,\n  deleteProduct,\n  updateProduct\n}\n","let url = 'http://localhost:4000/routes/'\n\nconst getRoutes = async () => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst getRoute = async (id) => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst createRoute = async (target) => {\n  const route = {\n    zone: target[1].value,\n    type: target[2].value,\n    label: target[3].value,\n  }\n\n   fetch(url, {\n      // Adding method type\n      method: \"POST\",\n      // Adding body or contents to send\n      body: JSON.stringify(route),\n      // Adding headers to the request\n      headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n  })\n  .catch(error => console.error('Error:', error))\n  .then(response => response.json())\n}\n\nconst deleteRoute = async (item) => {\n  if (window.confirm('¿Esta seguro que desea eliminar este producto?')) {\n    fetch(url + item._id, {\n      method: 'DELETE',\n      body: JSON.stringify(item),\n      headers: {\n         \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n   })\n   .catch(error => console.error('Error:', error))\n   .then(res => res.text()) // or res.json()\n   .then(res => console.log(\"Route deleted..\", res))\n  } else {\n    this.onCancel(item)\n  }\n}\n\nconst updateRoute = (target) => {\n  const route = {\n    _id: target[0].value,\n    zone: target[1].value,\n    type: target[2].value,\n    label: target[3].value,\n  }\n  fetch(url+route._id, {\n     method: \"PUT\",\n     body: JSON.stringify(route),\n     headers: {\n       \"Content-type\": \"application/json; charset=UTF-8\"\n     }\n   })\n .catch(error => console.error('Error:', error))\n .then(response => response.json())\n}\n\nexport {\n  getRoutes,\n  getRoute,\n  createRoute,\n  deleteRoute,\n  updateRoute\n}\n","let url = 'http://localhost:4000/conveyors/';\nlet zoneUrl = 'http://localhost:4000/zones/';\nlet neighborhoodUrl = 'http://localhost:4000/neighborhoods/';\n\nconst getConveyors = async () => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst getConveyorsByZone = async (zoneId) => {\n  /* Obtener Zonas */\n  let response = await fetch(zoneUrl);\n  let zones = await response.json();\n  let requiredZone;\n  zones.map( (zone) => {\n    if (zone._id == zoneId) {\n      requiredZone = zone;\n    }\n  })\n\n  /* Obtener barrios */\n  let neighborhoodResponse = await fetch(neighborhoodUrl);\n  let neighborhoods = await neighborhoodResponse.json();\n\n  /* Filtrar unicamente barrios que esten en la zona ingresada */\n  let requiredNeighborhoods = [];\n  neighborhoods.map( (neighborhood) => {\n    if (neighborhood.zone == zoneId) {\n      requiredNeighborhoods.push(neighborhood._id);\n    }\n  })\n\n  /* Obtener transportadores */\n  let conveyorResponse = await fetch(url);\n  let conveyors = await conveyorResponse.json();\n\n  /* Filtrar unicamente transportadores que esten en un barrio dentro de la zona ingresada */\n  let resultConveyors = [];\n  conveyors.filter( (conveyor) => {\n    if (requiredNeighborhoods.includes(conveyor.neighborhood)) {\n      resultConveyors.push(conveyor);\n    }\n  })\n\n  return resultConveyors;\n};\n\nconst getConveyor = async (id) => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst createConveyor = async (target) => {\n  const conveyor = {\n    name: target[1].value,\n    user: target[2].value,\n    neighborhood: target[3].value,\n    route: target[4].value,\n  }\n\n   fetch(url, {\n      // Adding method type\n      method: \"POST\",\n      // Adding body or contents to send\n      body: JSON.stringify(conveyor),\n      // Adding headers to the request\n      headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n  })\n  .catch(error => console.error('Error:', error))\n  .then(response => response.json())\n}\n\nconst deleteConveyor = async (item) => {\n  if (window.confirm('¿Esta seguro que desea eliminar este producto?')) {\n    fetch(url + item._id, {\n      method: 'DELETE',\n      body: JSON.stringify(item),\n      headers: {\n         \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n   })\n   .catch(error => console.error('Error:', error))\n   .then(res => res.text()) // or res.json()\n   .then(res => console.log(\"Conveyor deleted..\", res))\n  } else {\n    this.onCancel(item)\n  }\n}\n\nconst updateConveyor = (target) => {\n  const conveyor = {\n    _id: target[0].value,\n    name: target[1].value,\n    user: target[2].value,\n    neighborhood: target[3].value,\n    route: target[4].value,\n  }\n\n  fetch(url+conveyor._id, {\n     method: \"PUT\",\n     body: JSON.stringify(conveyor),\n     headers: {\n       \"Content-type\": \"application/json; charset=UTF-8\"\n     }\n   })\n .catch(error => console.error('Error:', error))\n .then(response => response.json())\n}\n\nconst assignConveyor = (conveyor) => {\n  fetch(url+conveyor._id, {\n     method: \"PUT\",\n     body: JSON.stringify(conveyor),\n     headers: {\n       \"Content-type\": \"application/json; charset=UTF-8\"\n     }\n   })\n .catch(error => console.error('Error:', error))\n .then(response => response.json())\n}\n\nexport {\n  getConveyors,\n  getConveyor,\n  createConveyor,\n  deleteConveyor,\n  updateConveyor,\n  getConveyorsByZone,\n  assignConveyor\n}\n","let url = 'http://localhost:4000/orders/'\nlet zoneUrl = 'http://localhost:4000/zones/';\nlet neighborhoodUrl = 'http://localhost:4000/neighborhoods/';\n\nconst getOrders = async () => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst getOrder = async (id) => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst getOrdersByRoute = async (zoneId) => {\n  /* Obtener Zonas */\n  let response = await fetch(zoneUrl);\n  let zones = await response.json();\n  let requiredZone;\n  zones.map( (zone) => {\n    if (zone._id == zoneId) {\n      requiredZone = zone;\n    }\n  })\n\n  /* Obtener barrios */\n  let neighborhoodResponse = await fetch(neighborhoodUrl);\n  let neighborhoods = await neighborhoodResponse.json();\n\n  /* Filtrar unicamente barrios que esten en la zona ingresada */\n  let requiredNeighborhoods = [];\n  neighborhoods.map( (neighborhood) => {\n    if (neighborhood.zone == zoneId) {\n      requiredNeighborhoods.push(neighborhood._id);\n    }\n  })\n\n  /* Obtener transportadores */\n  let orderResponse = await fetch(url);\n  let orders = await orderResponse.json();\n\n  /* Filtrar unicamente transportadores que esten en un barrio dentro de la zona ingresada */\n  let resultOrders = [];\n  orders.filter( (order) => {\n    if (requiredNeighborhoods.includes(order.neighborhood)) {\n      resultOrders.push(order);\n    }\n  })\n\n  return resultOrders;\n}\n\nconst assignRoutes = async (assignedRoutes) => {\n  console.log(\"ORDERS ON SERVICES\", assignedRoutes);\n  assignedRoutes.map( (order) => {\n    fetch(url+order._id, {\n       method: \"PUT\",\n       body: JSON.stringify(order),\n       headers: {\n         \"Content-type\": \"application/json; charset=UTF-8\"\n       }\n     })\n   .catch(error => console.error('Error:', error))\n   .then(response => response.json())\n  })\n}\n\nconst createOrder = async (target) => {\n  const conveyor = {\n    name: target[1].value,\n    user: target[2].value,\n    neighborhood: target[3].value,\n    route: target[4].value,\n  }\n\n   fetch(url, {\n      // Adding method type\n      method: \"POST\",\n      // Adding body or contents to send\n      body: JSON.stringify(conveyor),\n      // Adding headers to the request\n      headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n  })\n  .catch(error => console.error('Error:', error))\n  .then(response => response.json())\n}\n\nconst deleteOrder = async (item) => {\n  if (window.confirm('¿Esta seguro que desea eliminar este producto?')) {\n    fetch(url + item._id, {\n      method: 'DELETE',\n      body: JSON.stringify(item),\n      headers: {\n         \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n   })\n   .catch(error => console.error('Error:', error))\n   .then(res => res.text()) // or res.json()\n   .then(res => console.log(\"Conveyor deleted..\", res))\n  } else {\n    this.onCancel(item)\n  }\n}\n\nconst updateOrder = (target) => {\n  console.log(\"TARGET\", target)\n  const order = {\n    _id: target[0].value,\n    distributor: target[1].value,\n    state: target[2].value,\n    neighborhood: target[3].value,\n    route: target[6].value,\n  }\n\n  fetch(url+order._id, {\n     method: \"PUT\",\n     body: JSON.stringify(order),\n     headers: {\n       \"Content-type\": \"application/json; charset=UTF-8\"\n     }\n   })\n .catch(error => console.error('Error:', error))\n .then(response => response.json())\n}\n\nexport {\n  getOrders,\n  getOrder,\n  getOrdersByRoute,\n  createOrder,\n  deleteOrder,\n  updateOrder,\n  assignRoutes\n}\n","let url = 'http://localhost:4000/distributors/'\n\nconst getDistributors = async () => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst getDistributor = async (id) => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst createDistributor = async (target) => {\n  const distributor = {\n    name: target[1].value,\n    address: target[2].value,\n    user: target[3].value,\n    zone: target[4].value,\n  }\n\n   fetch(url, {\n      // Adding method type\n      method: \"POST\",\n      // Adding body or contents to send\n      body: JSON.stringify(distributor),\n      // Adding headers to the request\n      headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n  })\n  .catch(error => console.error('Error:', error))\n  .then(response => response.json())\n}\n\nconst deleteDistributor = async (item) => {\n  if (window.confirm('¿Esta seguro que desea eliminar este producto?')) {\n    fetch(url + item._id, {\n      method: 'DELETE',\n      body: JSON.stringify(item),\n      headers: {\n         \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n   })\n   .catch(error => console.error('Error:', error))\n   .then(res => res.text()) // or res.json()\n   .then(res => console.log(\"Distributor deleted..\", res))\n  } else {\n    this.onCancel(item)\n  }\n}\n\nconst updateDistributor = (target) => {\n  const distributor = {\n    _id: target[0].value,\n    name: target[1].value,\n    address: target[2].value,\n    user: target[3].value,\n    zone: target[4].value,\n  }\n\n  fetch(url+distributor._id, {\n     method: \"PUT\",\n     body: JSON.stringify(distributor),\n     headers: {\n       \"Content-type\": \"application/json; charset=UTF-8\"\n     }\n   })\n .catch(error => console.error('Error:', error))\n .then(response => response.json())\n}\n\nexport {\n  getDistributors,\n  getDistributor,\n  createDistributor,\n  deleteDistributor,\n  updateDistributor\n}\n","let url = 'http://localhost:4000/providers/'\n\nconst getProviders = async () => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst getProvider = async (id) => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst createProvider = async (target) => {\n  const provider = {\n    name: target[1].value,\n    nit: target[2].value,\n    inCharge: target[3].value,\n    user: target[4].value,\n  }\n\n   fetch(url, {\n      // Adding method type\n      method: \"POST\",\n      // Adding body or contents to send\n      body: JSON.stringify(provider),\n      // Adding headers to the request\n      headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n  })\n  .catch(error => console.error('Error:', error))\n  .then(response => response.json())\n}\n\nconst deleteProvider = async (item) => {\n  if (window.confirm('¿Esta seguro que desea eliminar este producto?')) {\n    fetch(url + item._id, {\n      method: 'DELETE',\n      body: JSON.stringify(item),\n      headers: {\n         \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n   })\n   .catch(error => console.error('Error:', error))\n   .then(res => res.text()) // or res.json()\n   .then(res => console.log(\"Provider deleted..\", res))\n  } else {\n    this.onCancel(item)\n  }\n}\n\nconst updateProvider = (target) => {\n  const provider = {\n    _id: target[0].value,\n    name: target[1].value,\n    nit: target[2].value,\n    inCharge: target[3].value,\n    user: target[4].value,\n  }\n  fetch(url+provider._id, {\n     method: \"PUT\",\n     body: JSON.stringify(provider),\n     headers: {\n       \"Content-type\": \"application/json; charset=UTF-8\"\n     }\n   })\n .catch(error => console.error('Error:', error))\n .then(response => response.json())\n}\n\nexport {\n  getProviders,\n  getProvider,\n  createProvider,\n  deleteProvider,\n  updateProvider\n}\n","let url = 'http://localhost:4000/inventory/'\n\nconst getInventory = async () => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst getById = async (id) => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nconst addRegistry = async (target) => {\n  const newProduct = {\n    product: target[1].value,\n    name: target[2].value,\n    quantity: target[3].value,\n    sellPrice: target[4].value,\n  }\n\n   fetch(url, {\n      // Adding method type\n      method: \"POST\",\n      // Adding body or contents to send\n      body: JSON.stringify(newProduct),\n      // Adding headers to the request\n      headers: {\n          \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n  })\n  .catch(error => console.error('Error:', error))\n  .then(response => response.json())\n}\n\nconst deleteRegistry = async (item) => {\n  if (window.confirm('¿Esta seguro que desea eliminar este registro?')) {\n    fetch(url + item._id, {\n      method: 'DELETE',\n      body: JSON.stringify(item),\n      headers: {\n         \"Content-type\": \"application/json; charset=UTF-8\"\n      }\n   })\n   .catch(error => console.error('Error:', error))\n   .then(res => res.text()) // or res.json()\n   .then(res => console.log(\"Registry deleted..\", res))\n  } else {\n    this.onCancel(item)\n  }\n}\n\nconst updateRegistry = (target) => {\n  const updatedRegistry = {\n    _id: target[0].value,\n    product: target[1].value,\n    name: target[2].value,\n    quantity: target[3].value,\n    sellPrice: target[4].value,\n  }\n  fetch(url+updatedRegistry._id, {\n     method: \"PUT\",\n     body: JSON.stringify(updatedRegistry),\n     headers: {\n       \"Content-type\": \"application/json; charset=UTF-8\"\n     }\n   })\n .catch(error => console.error('Error:', error))\n .then(response => response.json())\n}\n\n\nexport {\n  getInventory,\n  getById,\n  addRegistry,\n  deleteRegistry,\n  updateRegistry\n}\n","let url = 'http://localhost:4000/orders-by-product/'\n\nconst getOrdersByProduct = async () => {\n  let response = await fetch(url);\n  let responseData = await response.json();\n  return responseData;\n};\n\nexport {\n  getOrdersByProduct\n}\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nimport { setRoleUser, resetUserState, getRoleUser } from '../../services/userSession'\nimport { getUserByEmail } from '../../services/services'\n\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Enterprise Logistic\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = ({ roleUser, setRoleUser }) => {\n  const classes = useStyles();\n\n  const userAdmin = {\n    email: 'admin@gmail.com',\n    password: '123456789',\n    role: 'ADMIN'\n  }\n\n  const userProvider = {\n    email: 'provider@gmail.com',\n    password: '123456789',\n    role: 'PROVIDER'\n  }\n\n  const [data, setData] = useState({\n    email: '',\n    password: ''\n  });\n\n  let { email, password} = data;\n\n  const onChange = (e) => {\n    setData({ ...data,[e.target.name]: e.target.value });\n  }\n\n  const onSubmitLogin = (event) => {\n      event.preventDefault();\n      email = event.target[0].value;\n      password = event.target[2].value;\n      /* Validar con la data de la BD */\n      if(email == userAdmin.email && password == userAdmin.password){\n        setRoleUser(userAdmin.role);\n      }\n      else if(email == userProvider.email && password == userProvider.password) {\n        setRoleUser(userProvider.role);\n      }else{\n        /* validar si el formato es correcto */\n        alert(\"Usuario o Contraseña incorrectas\");\n      }\n    }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <PersonIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} onSubmit={onSubmitLogin} noValidate>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Correo Electronico\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={email}\n            onChange={onChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Contraseña\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={onChange}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Recordarme\"\n          />\n          <Button\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n            type='submit'\n          >\n            Iniciar Sesion\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Olvidaste tu contraseña?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/signup\" variant=\"body2\">\n                {\"Crear cuenta\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setRoleUser: (roleUser) => dispatch(setRoleUser(roleUser)),\n    resetUserState: () => dispatch(resetUserState())\n  }\n}\n\nconst mapStateToProps = (userInfo) => {\n  return {\n      roleUser: userInfo.roleUser\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);\n","const styles = {\n  titles: {\n    fontWeight: \"bold\"\n  },\n  addButton: {\n    float: \"right\"\n  },\n  actionTitle: {\n    fontWeight: \"bold\",\n    textTransform: \"capitalize\"\n  },\n  actionButton: {\n    margin: \"3px\"\n  },\n  tableCell: {\n    fontWeight: \"bold\",\n    textTransform: \"capitalize\"\n  }\n}\n\nexport default styles;\n","import React from \"react\";\nimport Fab from '@material-ui/core/Fab';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport { deleteProduct } from '../../../services/services';\nimport { useLocation} from 'react-router-dom';\n\nimport style from '../styles.js';\n\nconst CrudActionButton = ({size, operation, item, updateAction, deleteAction, ...props}) => {\n  let location = useLocation();\n  const handleClick = () => {\n    if (props.onClick) {\n      props.onClick(props.value);\n    }\n  }\n\n  const handleDelete = () => {\n    deleteAction(item);\n    window.location.href = ''+location.pathname;\n  }\n\n  return(\n    <Fab\n      style={style.actionButton}\n      size={size}\n      color={operation == 'edit' ? 'primary' : 'secondary'}\n      onClick={operation == 'edit' ? handleClick : handleDelete}\n    >\n      {operation == 'edit' ? <EditIcon /> : <DeleteOutlineIcon/>}\n    </Fab>\n  )\n}\n\nexport default CrudActionButton;\n","const styles = {\n  fieldInput: {\n    textTransform: \"capitalize\"\n  },\n  dialogIcon: {\n    margin: \"20px\"\n  }\n}\n\nexport default styles;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport CrudActionButton from '../crud/children/crudActionButton.js'\nimport { updateProduct } from '../../services/services'\nimport CrudActionButtonStyle from '../crud/styles.js'\nimport styles from './styles.js'\nimport { useLocation } from 'react-router-dom';\n\nexport default function FormActionDialog({ title, description, fields, operation, disabledFields, updateAction }) {\n  let location = useLocation();\n  const [open, setOpen] = React.useState(false);\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleEdit = (e) => {\n    e.preventDefault();\n    updateAction(e.target);\n    window.location.href = ''+location.pathname;\n  }\n\n  return (\n    <div>\n      <CrudActionButton\n        size='small'\n        color={operation == 'edit' ? 'primary' : 'secondary'}\n        operation={operation}\n        onClick={handleClickOpen}\n      />\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <Grid container>\n          <Grid item xs={1}>\n            <AccountTreeIcon\n              style={styles.dialogIcon}\n              fontSize={\"large\"}\n              />\n          </Grid>\n          <Grid item xs={11}>\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n          </Grid>\n        </Grid>\n        <DialogContent>\n          <DialogContentText>\n            {description}\n          </DialogContentText>\n          <form style={{width: \"450px\"}} id='editForm' onSubmit={handleEdit}>\n            {\n              Object.entries(fields).map((field) => {\n                /* #TODO Recibir por props los campos que se desean bol */\n                const defaultDisabled = field[0] == \"_id\" || field[0] == \"createdAt\" || field[0] == \"updatedAt\" ;\n                return (\n                  <TextField\n                    style={styles.fieldInput}\n                    autoFocus\n                    margin=\"dense\"\n                    id={field}\n                    label={field[0]}\n                    type=\"text\"\n                    fullWidth\n                    defaultValue={field[1]}\n                    disabled={defaultDisabled ? true : false }\n                  />\n                )\n              })\n            }\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button form=\"editForm\" type=\"submit\" color=\"primary\">\n            {operation}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\nimport styles from '../styles.js';\n\nimport CrudActionButton from '../children/crudActionButton'\nimport ActionDialog from '../../dialog/dialogAction'\nimport { deleteProduct } from '../../../services/services';\n\nconst CrudTable = ({title, data, editActionTitle, editActionDescription, updateAction, deleteAction, ...props}) => {\n  const keys = Object.keys(data[0]);\n\n  return (\n    <TableContainer component={Paper}>\n      <Table stickyHeader aria-label=\"sticky table\">\n        <TableHead>\n          <TableRow>\n            {keys.map((column) => (\n              <TableCell style={styles.tableCell}> {column} </TableCell>\n            ))}\n            <TableCell style={styles.actionTitle}> Action </TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {data.map((item, index) => {\n            return (\n              <TableRow align=\"center\" >\n                {\n                  Object.entries(item).map((key, rowIndex) => {\n                    return (<TableCell>{ key[1] }</TableCell>)\n                  })\n                }\n                <TableCell>\n                  <ActionDialog\n                    title={editActionTitle}\n                    description={editActionDescription}\n                    fields={item}\n                    operation='edit'\n                    updateAction={updateAction}\n                  />\n                  <CrudActionButton\n                    size='small'\n                    operation='delete'\n                    item={item}\n                    deleteAction={deleteAction}\n                  />\n                </TableCell>\n              </TableRow>\n            )\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default CrudTable;\n","import React from \"react\";\nimport Button from '@material-ui/core/Button';\n\nconst CrudButton = ({label, position, color, ...props}) => {\n  const handleClick = () => {\n    if (props.onClick) {\n      props.onClick(props.value);\n    }\n  }\n\n  return(\n    <Button\n      style={{\n        float: position,\n      }}\n      variant=\"contained\"\n      onClick={handleClick}\n      color={`${color}`}\n    >\n      {label}\n    </Button>\n  )\n}\n\nexport default CrudButton;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { useLocation } from 'react-router-dom';\n\nimport CrudButton from '../crud/children/crudButton.js'\nimport styles from './styles.js'\n\nexport default function FormDialog({ buttonLabel, title, description, fields, dialogButtonLabel, buttonPosition, action }) {\n    let location = useLocation();\n  const [open, setOpen] = React.useState(false);\n  const [formData, setFormData] = React.useState({});\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    action(event.target);\n    window.location.href = ''+location.pathname;\n  }\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <CrudButton\n        label={buttonLabel}\n        variant=\"outlined\"\n        color=\"primary\"\n        position={buttonPosition}\n        onClick={handleClickOpen}\n      />\n\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n        <Grid container>\n          <Grid item xs={1}>\n            <AccountTreeIcon\n              style={styles.dialogIcon}\n              fontSize={\"large\"}\n              />\n          </Grid>\n          <Grid item xs={11}>\n            <DialogTitle id=\"form-dialog-title\">{title}</DialogTitle>\n          </Grid>\n        </Grid>\n        <DialogContent>\n          <DialogContentText>\n            {description}\n          </DialogContentText>\n          <form style={{width: \"450px\"}} id='createForm' onSubmit={handleSubmit}>\n            {\n              Object.keys(fields).map( (field) =>{\n                const defaultDisabled = field == \"_id\" || field == \"createdAt\" || field == \"updatedAt\" ;\n                return (\n                    <TextField\n                      style={styles.fieldInput}\n                      autoFocus\n                      margin=\"dense\"\n                      id={field}\n                      label={field}\n                      type=\"text\"\n                      fullWidth\n                      value={formData.field}\n                      style={{display: defaultDisabled ? 'none' : 'block'}}\n                    />\n                );\n              })\n            }\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button form='createForm' type=\"submit\" color=\"primary\">\n            {dialogButtonLabel}\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CrudTable from './children/crudTable.js';\nimport Dialog from '../dialog'\n\nconst Crud = ({\n  label,\n  data,\n  dialogBtnLabel,\n  buttonPosition,\n  dialogDescription,\n  dialogActionTitle,\n  dialogActionDescription,\n  createAction,\n  updateAction,\n  deleteAction\n}) => {\n  return (\n      <Container>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Typography variant=\"h1\" component=\"h2\" gutterBottom>\n              {label}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <CrudTable\n              title='title'\n              data={data}\n              editActionTitle={dialogActionTitle}\n              editActionDescription={dialogActionDescription}\n              updateAction={updateAction}\n              deleteAction={deleteAction}\n            />\n          </Grid>\n          <Grid item xs>\n            <Dialog\n              buttonLabel={dialogBtnLabel}\n              description={dialogDescription}\n              buttonPosition={buttonPosition}\n              dialogButtonLabel=\"Crear\"\n              title={\"Create\"}\n              fields={data[0]}\n              action={createAction}\n            />\n          </Grid>\n        </Grid>\n      </Container>\n  );\n}\n\nexport default Crud;\n","import React, { useEffect, useState } from \"react\";\nimport Crud from '../crud';\nimport {\n  getRoutes\n} from '../../services/services.js'\nimport { createRoute, updateRoute, deleteRoute } from '../../services/services'\n\nconst RoutesCrud = () => {\n  const [data, setData] = useState([{\"status\": \"NO DATA\"}])\n\n  useEffect( async () => {\n    let responseData = await getRoutes();\n\n    setData(responseData);\n  }, [])\n\n  return (\n    <Crud\n      label={\"Rutas\"}\n      data={data}\n      buttonPosition={\"right\"}\n      dialogBtnLabel={\"Agregar\"}\n      dialogDescription={\"Ingreselos datos de la ruta.\"}\n      createAction={createRoute}\n      updateAction={updateRoute}\n      deleteAction={deleteRoute}\n    />\n  );\n}\n\nexport default RoutesCrud;\n","import React, { useState, useEffect } from \"react\";\nimport Crud from '../crud';\nimport Dialog from '../dialog'\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\nimport { getConveyors, createConveyor, updateConveyor, deleteConveyor } from '../../services/services'\n//import getRoutes from '../../services/services.js'\n\nconst RoutesTransporters = () => {\n  const [data, setData] = useState([{\"status\": \"NO DATA\"}])\n\n  useEffect( async () => {\n    let responseData = await getConveyors();\n\n    setData(responseData);\n  }, [])\n\n  return (\n    <Crud\n      label={\"Transportadores\"}\n      data={data}\n      buttonPosition={\"center\"}\n      dialogBtnLabel={\"Agregar\"}\n      dialogDescription={\"Descripcion de prueba\"}\n      createAction={createConveyor}\n      updateAction={updateConveyor}\n      deleteAction={deleteConveyor}\n    />\n  );\n}\n\nexport default RoutesTransporters;\n","import React, { useState, useEffect } from \"react\";\nimport Crud from '../crud';\nimport Dialog from '../dialog'\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\nimport { getProducts, createProduct, updateProduct, deleteProduct } from '../../services/services'\n\nconst RoutesProducts = () => {\n  const [data, setData] = useState([{\"status\": \"NO DATA\"}])\n\n  useEffect( async () => {\n    let responseData = await getProducts();\n\n    setData(responseData);\n  }, [])\n\n  return (\n    <Crud\n      label={\"Productos\"}\n      data={data}\n      buttonPosition={\"right\"}\n      dialogBtnLabel={\"Agregar\"}\n      dialogDescription={\"Descripcion de prueba\"}\n      dialogActionTitle={\"Editar Producto\"}\n      dialogActionDescription={\"Descripcion ...\"}\n      createAction={createProduct}\n      updateAction={updateProduct}\n      deleteAction={deleteProduct}\n    />\n  );\n}\n\nexport default RoutesProducts;\n","import React, { useState, useEffect } from \"react\";\nimport Crud from '../crud';\nimport Dialog from '../dialog'\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport CrudTable from '../crud/children/crudTable.js';\nimport { getOrders, updateOrder, deleteOrder } from '../../services/services'\n\nconst RoutesOrders = () => {\n  const [data, setData] = useState([{\"status\": \"NO DATA\"}])\n\n  useEffect( async () => {\n    let responseData = await getOrders();\n\n    setData(responseData);\n  }, [])\n\n  return (\n    <Container>\n      <Typography variant='h1'>\n        Pedidos\n      </Typography>\n      <br />\n      <CrudTable\n        data={data}\n        updateAction={updateOrder}\n        deleteAction={deleteOrder}\n      />\n    </Container>\n  );\n}\n\nexport default RoutesOrders;\n","import React, { useState, useEffect } from \"react\";\nimport Crud from '../crud';\nimport Dialog from '../dialog'\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\nimport { getDistributors, createDistributor, updateDistributor, deleteDistributor } from '../../services/services'\n\nconst RoutesProducts = () => {\n  const [data, setData] = useState([{\"status\": \"NO DATA\"}])\n\n  useEffect( async () => {\n    let responseData = await getDistributors();\n\n    setData(responseData);\n  }, [])\n\n  return (\n    <Crud\n      label={\"Distribuidores\"}\n      data={data}\n      buttonPosition={\"right\"}\n      dialogBtnLabel={\"Agregar\"}\n      dialogDescription={\"Descripcion de prueba\"}\n      dialogActionTitle={\"Editar Distribuidor\"}\n      dialogActionDescription={\"Descripcion ...\"}\n      createAction={createDistributor}\n      updateAction={updateDistributor}\n      deleteAction={deleteDistributor}\n    />\n  );\n}\n\nexport default RoutesProducts;\n","import React, { useState, useEffect } from \"react\";\nimport Crud from '../crud';\nimport Dialog from '../dialog'\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\nimport { getProviders, createProvider, updateProvider, deleteProvider } from '../../services/services'\n\nconst RoutesProducts = () => {\n  const [data, setData] = useState([{\"status\": \"NO DATA\"}])\n\n  useEffect( async () => {\n    let responseData = await getProviders();\n\n    setData(responseData);\n  }, [])\n\n  return (\n    <Crud\n      label={\"Proveedores\"}\n      data={data}\n      buttonPosition={\"right\"}\n      dialogBtnLabel={\"Agregar\"}\n      dialogDescription={\"Descripcion de prueba\"}\n      dialogActionTitle={\"Editar Proveedor\"}\n      dialogActionDescription={\"Descripcion ...\"}\n      createAction={createProvider}\n      updateAction={updateProvider}\n      deleteAction={deleteProvider}\n    />\n  );\n}\n\nexport default RoutesProducts;\n","import React, { useEffect, useState } from \"react\";\nimport Crud from '../crud';\nimport { getInventory, getById, addRegistry, deleteRegistry, updateRegistry } from '../../services/services'\n\nconst InventoryCrud = () => {\n  const [data, setData] = useState([{\"status\": \"NO DATA\"}])\n\n  useEffect( async () => {\n    let responseData = await getInventory();\n\n    setData(responseData);\n  }, [])\n\n  return (\n    <Crud\n      label={\"Inventario\"}\n      data={data}\n      buttonPosition={\"right\"}\n      dialogBtnLabel={\"Agregar\"}\n      dialogDescription={\"Ingreselos datos de la ruta.\"}\n      createAction={addRegistry}\n      updateAction={updateRegistry}\n      deleteAction={deleteRegistry}\n    />\n  );\n}\n\nexport default InventoryCrud;\n","import React, { useState, useEffect } from \"react\";\nimport Crud from '../crud';\nimport Dialog from '../dialog'\nimport AccessibilityIcon from '@material-ui/icons/Accessibility';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nimport CrudTable from '../crud/children/crudTable.js';\nimport { getOrdersByProduct } from '../../services/services'\n\nconst RoutesOrders = () => {\n  const [data, setData] = useState([{\"status\": \"NO DATA\"}])\n\n  useEffect( async () => {\n    let responseData = await getOrdersByProduct();\n\n    setData(responseData);\n  }, [])\n\n  return (\n    <Container>\n      <Typography variant='h1'>\n        Pedidos por Producto\n      </Typography>\n      <br />\n      <CrudTable\n        data={data}\n      />\n    </Container>\n  );\n}\n\nexport default RoutesOrders;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Enteprise Logistic\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function DistributorSignUp() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Registro Distribuidor\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"Nombre\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Apellidos\"\n                name=\"lastName\"\n                autoComplete=\"lname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"address\"\n                label=\"Direccion\"\n                name=\"address\"\n                autoComplete=\"address\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Correo Electronico\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Contraseña\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            REGISTRARSE\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Ya tienes cuenta? Inicia Sesion\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Icon from '@material-ui/core/Icon';\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\n\nimport { resetUserState } from '../../services/userSession'\n\nimport DistributorSignUp from '../signup/distributor';\n\nconst SignupTypeSelector = ({type}) => {\n  return (\n    <Container>\n      <Typography\n        align='center'\n        variant='h3'\n        >\n        ¿Que tipo de usuario eres?\n      </Typography>\n      <br/>\n      <br/>\n      <br/>\n      <Grid container spacing={3}>\n        <Grid item xs={4}>\n          <Typography\n            align='center'\n            variant='h5'\n            >\n            Proveedor\n          </Typography>\n          <Button href=\"/signup/proveedor\">\n            <BusinessCenterIcon fontSize='large'/>\n          </Button>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography\n            align='center'\n            variant='h5'\n            >\n            Distribuidor\n          </Typography>\n          <Button href=\"/signup/distribuidor\">\n            <AddShoppingCartIcon fontSize='large'/>\n          </Button>\n        </Grid>\n        <Grid item xs={4}>\n          <Typography\n            align='center'\n            variant='h5'\n            >\n            Transportador\n          </Typography>\n          <Button href=\"/signup/transportador\">\n            <LocalShippingIcon fontSize='large'/>\n          </Button>\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default SignupTypeSelector;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Enteprise Logistic\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function ProviderSignUp() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Registro Proveedor\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"name\"\n                name=\"name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Nombre Proveedor\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"nit\"\n                label=\"NIT\"\n                name=\"nit\"\n                autoComplete=\"nit\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Nombre encargado\"\n                name=\"email\"\n                autoComplete=\"email\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"phone\"\n                label=\"Telefono\"\n                name=\"phone\"\n                autoComplete=\"phone\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Solicitar Registro\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Ya tienes cuenta? Inicia sesión\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Enteprise Logistic\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nexport default function ConveyorSignUp() {\n  const classes = useStyles();\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Registro Transportador\n        </Typography>\n        <form className={classes.form} noValidate>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"Nombre completo\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"C.C\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                autoComplete=\"phone\"\n                name=\"phone\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"phone\"\n                label=\"Telefono\"\n                autoFocus\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"neighborhood\"\n                label=\"Barrio\"\n                name=\"neighborhood\"\n                autoComplete=\"neighborhood\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"plate\"\n                label=\"Placa Vehiculo\"\n                name=\"plate\"\n                autoComplete=\"plate\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Solicitar Registro\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Ya tienes cuenta? Inicia Sesion\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport { getRoutes, getConveyorsByZone, getOrdersByRoute, assignRoutes, updateConveyor, assignConveyor } from '../../services/services.js';\n\nconst AssignRoutes = () => {\n  const useStyles = makeStyles( (theme) => ({\n    root: {\n     flexGrow: 1,\n     marginTop: 30,\n     display: 'flex',\n     oveflow: \"auto\",\n     maxWidth: \"100%\"\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 320,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n    titlesGrid: {\n      marginTop: '15px',\n    },\n    saveButton: {\n      marginTop: '25px'\n    }\n  }));\n\n  const [conveyors, setConveyors] = React.useState([]);\n  const [conveyor, setConveyor] = React.useState({});\n\n  const [orders, setOrders] = React.useState([]);\n  const [assignedOrders, setAssignedOrders] = React.useState([]);\n\n  const [routes, setRoutes] = React.useState([]);\n  const [route, setRoute] = React.useState('');\n\n  const [selectedRoute, setselectedRoute] = React.useState('');\n\n  const handleCheckbox = (event) => {\n    event.preventDefault();\n    const orderId = event.target.id;\n    orders.map( (order) => {\n      if(order._id == orderId){\n        order.state = \"Asignado\";\n        order.route = route;\n        const update = assignedOrders.concat(order);\n        setAssignedOrders(update);\n      }\n    })\n  }\n  const handleAssign = (event) => {\n    event.preventDefault();\n    /* Asociar id ruta a la ruta del transportador */\n    const update = conveyor;\n    update.route = route;\n    assignConveyor(update)\n    assignRoutes(assignedOrders);\n  }\n  const handleConveyorChange = async (event) => {\n    setConveyor(event.target.value);\n  };\n\n  const handleRouteChange = async (event) => {\n    let responseConveyors = await getConveyorsByZone(event.target.value);\n    setRoute(event.target.value)\n    setConveyors(responseConveyors);\n\n    let responseOrders = await getOrdersByRoute(event.target.value);\n    setOrders(responseOrders);\n  };\n\n  const handleOrdersChange = (event) => {\n    setOrders(event.target.value);\n  };\n\n  const classes = useStyles();\n\n  useEffect( async () => {\n    let responseRoutes = await getRoutes();\n    setRoutes(responseRoutes);\n  }, [])\n\n  return (\n    <Container>\n        <Typography variant='h1'>\n          Asignar Rutas\n        </Typography>\n        <br></br>\n        <Grid container spacing={4} justify=\"center\">\n          <Grid item xs={6}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Seleccione una Ruta</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={route}\n                onChange={handleRouteChange}\n                label=\"Seleccione una Ruta\"\n              >\n                {\n                  routes.map( (route) => (\n                    <MenuItem value={route.zone}>{route.label}</MenuItem>\n                  ))\n                }\n              </Select>\n            </FormControl>\n          </Grid>\n          <Grid item xs={6}>\n            <FormControl variant=\"outlined\" className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-outlined-label\">Seleccione un Transportador</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-outlined-label\"\n                id=\"demo-simple-select-outlined\"\n                value={conveyor}\n                onChange={handleConveyorChange}\n                label=\"Seleccione una Ruta\"\n              >\n                {\n                  conveyors.map( (conveyor) => (\n                    <MenuItem value={conveyor}>{conveyor.name}</MenuItem>\n                  ))\n                }\n              </Select>\n            </FormControl>\n          </Grid>\n        </Grid>\n        <form id='assignForm' onSubmit={handleAssign}>\n          <Paper>\n            <div>\n              <Grid container spacing={3} justify=\"center\" className={classes.titlesGrid}>\n                <Grid item xs={1} />\n                <Grid item xs={3}>\n                  <strong>Distribuidor</strong>\n                </Grid>\n                <Grid item xs={3}>\n                  <strong>Ruta</strong>\n                </Grid>\n                <Grid item xs={3}>\n                  <strong>Estado</strong>\n                </Grid>\n                <Grid item xs={2}>\n                  <strong>Fecha de Solicitud</strong>\n                </Grid>\n                {\n                  orders.map( (order) => {\n                    return (\n                      <>\n                        <Grid item xs={1}>\n                          <Checkbox\n                            id={order._id}\n                            color=\"primary\"\n                            inputProps={{ 'aria-label': 'secondary checkbox' }}\n                            style={{paddingTop: '2px'}}\n                            onChange={handleCheckbox}\n                          />\n                        </Grid>\n                        <Grid item xs={3}>\n                          {order.distributor}\n                        </Grid>\n                        <Grid item xs={3}>\n                          {order.route}\n                        </Grid>\n                        <Grid item xs={3}>\n                          {order.state}\n                        </Grid>\n                        <Grid item xs={2}>\n                          {order.createdAt}\n                        </Grid>\n                      </>\n                    );\n                  })\n                }\n              </Grid>\n            </div>\n          </Paper>\n        </form>\n        <Button type='submit' form='assignForm' variant='contained' color='primary' className={classes.saveButton}>\n          Guardar Ruta\n        </Button>\n    </Container>\n  )\n}\n\nexport default AssignRoutes;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Login from '../login';\nimport RoutesCrud from '../routesCrud';\nimport RoutesConveyors from '../routesConveyors';\nimport RoutesProducts from '../routesProducts';\nimport RoutesOrders from '../orders/routesOrders';\nimport RoutesDistributors from '../routesDitributors';\nimport RoutesProviders from '../routesProviders';\nimport RoutesInventory from '../routesInventory';\nimport RoutesOdersByProduct from '../ordersByProductRoute/routesOrdersByProduct';\n\nimport SignupTypeSelector from '../signup/signupTypeSelector';\nimport DistributorSignUp from '../signup/distributor';\nimport ProviderSignUp from '../signup/provider';\nimport ConveyorSignUp from '../signup/conveyor';\n\nimport AssignRoutes from '../assignRoutes/assignRoutes';\n\nconst Routes = ({ roleUser }) => {\n  return (\n    <Switch>\n        /* Rutas registro */\n        <Route path = '/signup'\n          exact component = {\n            SignupTypeSelector\n          }\n        />\n        <Route path = '/signup/distribuidor'\n          exact component = {\n            DistributorSignUp\n          }\n        />\n        <Route path = '/signup/proveedor'\n          exact component = {\n            ProviderSignUp\n          }\n        />\n        <Route path = '/signup/transportador'\n          exact component = {\n            ConveyorSignUp\n          }\n        />\n\n        /* Rutas Admin */\n      <Route path = '/rutas'\n        exact component = {\n          RoutesCrud\n        }\n      />\n    <Route path = '/inventario'\n        exact component = {\n          RoutesInventory\n        }\n      />\n      <Route path = '/pedidos'\n        exact component = {\n          RoutesOrders\n        }\n      />\n      <Route path = '/transportadores'\n        exact component = {\n          RoutesConveyors\n        }\n      />\n      <Route path = '/distribuidores'\n        exact component = {\n          RoutesDistributors\n        }\n      />\n      <Route path = '/proveedores'\n        exact component = {\n          RoutesProviders\n        }\n      />\n      <Route path = '/productos'\n        exact component = {\n          RoutesProducts\n        }\n      />\n    <Route path = '/pedidos-por-producto'\n        exact component = {\n          RoutesOdersByProduct\n        }\n      />\n      <Route path = '/asignar-rutas'\n          exact component = {\n            AssignRoutes\n          }\n      />\n        {\n          roleUser == ''\n          ?\n          <Route path = '/login'\n            exact component = {\n              Login\n            }\n          />\n          :\n          <Redirect to=\"/home\" />\n        }\n        /*\n          Rutas Faltantes:\n          - Admin\n            - Crud Transportadores\n            - Crud Distribuidores\n            - Crud Proveedores\n            - Teminar Asignar rutas\n          - General\n            - Signup selector\n            - Signup de cada rol\n          - Distribuidores\n            - Comprar Productos\n            - Ver pedidos\n          - Transportadores\n            - Ver Rutas\n            - Historial de Rutas\n          - Proveedor\n            - Ver Productos\n            - Actualizar productos\n        */\n    </Switch>\n  )\n}\n\nconst mapStateToProps = (userInfo) => {\n  return {\n      roleUser: userInfo.roleUser\n  }\n}\n\nexport default connect(mapStateToProps)(Routes);\n","const styles = {\n  navBar:{\n    marginBottom: \"20px\"\n  },\n  navButton: {\n    marginLeft: \"50px\",\n    color: \"white\"\n  },\n  roleIcon: {\n    margin: \"20px\",\n  }\n}\n\nexport default styles;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\n\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport SupervisedUserCircleIcon from '@material-ui/icons/SupervisedUserCircle';\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\nimport DirectionsWalkIcon from '@material-ui/icons/DirectionsWalk';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\n\nimport CrudButton from '../crud/children/crudButton';\nimport { resetUserState } from '../../services/userSession'\nimport styles from './styles.js'\n\nconst NavSelector = ({ roleUser, resetUserState, ...props }) => {\n  const handleLogout = () => {\n    resetUserState();\n  }\n\n  if (roleUser == 'ADMIN') {\n    return(\n      <>\n        <SupervisedUserCircleIcon fontSize={\"large\"} style={styles.roleIcon} />\n        <Typography variant=\"h6\" >\n          Enterprise Logistic\n        </Typography>\n        <Button href=\"/inventario\" style={styles.navButton}>Inventario</Button>\n        <Button href=\"/asignar-rutas\" style={styles.navButton}>Asignar Rutas</Button>\n        <Button href=\"/pedidos\" style={styles.navButton}>Pedidos</Button>\n        <Button href=\"/rutas\" style={styles.navButton}>Rutas</Button>\n        <Button href=\"/transportadores\" style={styles.navButton}>Transportadores</Button>\n        <Button href=\"/distribuidores\" style={styles.navButton}>Distribuidores</Button>\n        <Button href=\"/proveedores\" style={styles.navButton}>Proveedores</Button>\n        <Button href=\"/productos\" style={styles.navButton}>Productos</Button>\n        <Button href=\"/login\" style={styles.navButton} onClick={handleLogout}>Logout</Button>\n      </>\n    )\n  }\n  else if(roleUser == 'PROVIDER'){\n    return(\n      <>\n        <BusinessCenterIcon fontSize={\"large\"} style={styles.roleIcon} />\n        <Typography variant=\"h6\" >\n          Enterprise Logistic\n        </Typography>\n        <Button href=\"/comprar\" style={styles.navButton}>Añadir Productos</Button>\n        <Button href=\"/mis-pedidos\" style={styles.navButton}>Consultar Productos</Button>\n        <Button href=\"/login\" style={styles.navButton} onClick={handleLogout}>Logout</Button>\n      </>\n    )\n  }\n  else if(roleUser == 'DISTRIBUTOR'){\n    return(\n      <>\n        <AddShoppingCartIcon fontSize={\"large\"} style={styles.roleIcon} />\n        <Typography variant=\"h6\" >\n          Enterprise Logistic\n        </Typography>\n        <Button href=\"/comprar\" style={styles.navButton}>Comprar Productos</Button>\n        <Button href=\"/mis-pedidos\" style={styles.navButton}>Mis pedidos</Button>\n        <Button href=\"/login\" style={styles.navButton} onClick={handleLogout}>Logout</Button>\n      </>\n    )\n  }\n  else if(roleUser == 'CONVEYOR'){\n    return(\n      <>\n        <LocalShippingIcon fontSize={\"large\"} style={styles.roleIcon} />\n        <Typography variant=\"h6\" >\n          Enterprise Logistic\n        </Typography>\n        <Button href=\"/consultar-rutas\" style={styles.navButton}>Consultar Rutas</Button>\n        <Button href=\"/historial\" style={styles.navButton}>Historial Rutas</Button>\n        <Button href=\"/login\" style={styles.navButton} onClick={handleLogout}>Logout</Button>\n      </>\n    )\n  }\n  else{\n    return(\n      <>\n      <DirectionsWalkIcon fontSize={\"large\"} style={styles.roleIcon} />\n      <Typography variant=\"h6\" >\n        Enterprise Logistic\n      </Typography>\n      </>\n    )\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    resetUserState: () => dispatch(resetUserState())\n  }\n}\n\nconst mapStateToProps = (userInfo) => {\n  return {\n      roleUser: userInfo.roleUser\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(NavSelector);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nimport NavSelector from './navSelector';\nimport styles from './styles.js'\n\nconst Navigation = ({roleUser}) => {\n  return (\n    <AppBar style={styles.navBar} position=\"static\">\n      <Toolbar className=\"navBar\">\n        <NavSelector/>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nconst mapStateToProps = (userInfo) => {\n  return {\n      roleUser: userInfo.roleUser\n  }\n}\n\nexport default connect(mapStateToProps)(Navigation);\n","const styles = {\n  mainContainer: {\n    paddingLeft: \"100px\",\n    paddingRight: \"100px\",\n  }\n}\n\nexport default styles;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport Routes from '../routes';\nimport Navigation from '../navigation';\nimport styles from './styles.js'\n\nconst MainTheme = () => {\n\n  return (\n    <>\n      <Navigation />\n      <Container\n        style={styles.mainContainer}\n      >\n        <Routes/>\n      </Container>\n    </>\n  );\n}\n\nexport default MainTheme;\n","import React from 'react';\nimport MainTheme from './components/themes/mainTheme';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport store from './services/userSession';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <BrowserRouter>\n          <MainTheme />\n        </BrowserRouter>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}